variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CONTAINER_IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375

stages:
  - build
  - test


build_backend:
  stage: build
  image: docker:latest
  tags:
    - docker
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  services:
    - name: docker:19-dind
      command: [ "--tls=false" ]
  script:
    - docker build -t $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .
    - docker push $CONTAINER_IMAGE
    - docker push $CONTAINER_IMAGE_LATEST
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"


test:
  stage: test
  image: docker:latest
  tags:
    - docker
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  services:
    - name: docker:19-dind
      command: [ "--tls=false" ]
  script:
    - docker pull $CONTAINER_IMAGE_LATEST
    - docker network create statinc_network
    - docker run -d --name gateway_mongo_1 -p 27017:27017 --network-alias=mongo --net=statinc_network mongo:5.0.6
    - docker run -d --name=gateway --net=statinc_network $CONTAINER_IMAGE_LATEST
    - docker exec -t gateway pytest
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"

